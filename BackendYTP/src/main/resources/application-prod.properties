# Production Configuration
# spring.profiles.active=prod  # 不能在profile配置文件中设置此属性

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/

# Database Configuration (Environment Variables)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration - 修复事务问题
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE:3}
spring.datasource.hikari.minimum-idle=${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE:1}
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=${SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT:60000}
spring.datasource.hikari.validation-timeout=${SPRING_DATASOURCE_HIKARI_VALIDATION_TIMEOUT:5000}
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.initialization-fail-timeout=${SPRING_DATASOURCE_HIKARI_INITIALIZATION_FAIL_TIMEOUT:1}
spring.datasource.hikari.auto-commit=true

# PostgreSQL Prepared Statement Configuration - 解决连接池冲突
spring.datasource.hikari.data-source-properties.prepareThreshold=0
spring.datasource.hikari.data-source-properties.preparedStatementCacheQueries=0
spring.datasource.hikari.data-source-properties.preparedStatementCacheSizeMiB=0

# SSL Configuration removed to avoid Hikari configuration conflicts

# JPA Configuration - 修复事务管理
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Transaction Configuration - 解决提交问题
spring.transaction.default-timeout=30
spring.transaction.rollback-on-commit-failure=true

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.access-token.expiration=${JWT_ACCESS_TOKEN_EXPIRATION:3600}
jwt.refresh-token.expiration=${JWT_REFRESH_TOKEN_EXPIRATION:604800}

# Actuator Configuration for Health Checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Logging Configuration (免费套餐只支持控制台日志)
logging.level.root=INFO
logging.level.com.youtubeplanner.backend=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.postgresql=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
# 免费套餐不支持文件日志，只使用控制台输出
# logging.file.name=/app/logs/application.log
# logging.file.max-size=10MB
# logging.file.max-history=7

# MyBatis Configuration
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.youtubeplanner.backend.script.entity
mybatis.configuration.map-underscore-to-camel-case=true 